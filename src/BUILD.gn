# Copyright 2016 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#==============================================================================

import("//third_party/protobuf/proto_library.gni")

proto_library("protos") {
  sources = [
    "feature_extractor.proto",
    "sentence.proto",
    "task_spec.proto",
  ]
  proto_out_dir = "cld_3/protos"
}

static_library("cld_3") {
  sources = [
    "base.cc",
    "base.h",
    "casts.h",
    "embedding_feature_extractor.cc",
    "embedding_feature_extractor.h",
    "embedding_network.cc",
    "embedding_network.h",
    "embedding_network_params.h",
    "feature_extractor.cc",
    "feature_extractor.h",
    "feature_types.cc",
    "feature_types.h",
    "float16.h",
    "fml_parser.cc",
    "fml_parser.h",
    "language_identifier_features.cc",
    "language_identifier_features.h",
    "lang_id_nn_params.cc",
    "lang_id_nn_params.h",
    "nnet_language_identifier.cc",
    "nnet_language_identifier.h",
    "registry.cc",
    "registry.h",
    "relevant_script_feature.cc",
    "relevant_script_feature.h",
    "script_detector.h",
    "sentence_features.cc",
    "sentence_features.h",
    "simple_adder.h",
    "script_span/fixunicodevalue.cc",
    "script_span/fixunicodevalue.h",
    "script_span/generated_entities.cc",
    "script_span/generated_ulscript.cc",
    "script_span/generated_ulscript.h",
    "script_span/getonescriptspan.cc",
    "script_span/getonescriptspan.h",
    "script_span/integral_types.h",
    "script_span/offsetmap.cc",
    "script_span/offsetmap.h",
    "script_span/port.h",
    "script_span/stringpiece.h",
    "script_span/text_processing.cc",
    "script_span/text_processing.h",
    "script_span/utf8acceptinterchange.h",
    "script_span/utf8prop_lettermarkscriptnum.h",
    "script_span/utf8repl_lettermarklower.h",
    "script_span/utf8scannot_lettermarkspecial.h",
    "script_span/utf8statetable.cc",
    "script_span/utf8statetable.h",
    "task_context.cc",
    "task_context.h",
    "task_context_params.cc",
    "task_context_params.h",
    "unicodetext.cc",
    "unicodetext.h",
    "utils.cc",
    "utils.h",
    "workspace.cc",
    "workspace.h",
  ]
  public_deps = [
    "//third_party/protobuf:protobuf_lite",
    ":protos",
  ]
}

# The executables below are functional. Uncomment to use.

#executable("language_identifier_main") {
#  sources = [
#    "language_identifier_main.cc",
#  ]
#  deps = [
#    ":cld_3",
#  ]
#}

#executable("getonescriptspan_test") {
#  sources = [
#    "script_span/getonescriptspan_test.cc",
#  ]
#  deps = [
#    ":cld_3",
#  ]
#}

#executable("language_identifier_features_test") {
#  sources = [
#    "language_identifier_features_test.cc",
#  ]
#  deps = [
#    ":cld_3",
#  ]
#}

#executable("nnet_lang_id_test") {
#  sources = [
#    "nnet_lang_id_test.cc",
#    "nnet_lang_id_test_data.cc",
#    "nnet_lang_id_test_data.h",
#  ]
#  deps = [
#    ":cld_3",
#  ]
#}
